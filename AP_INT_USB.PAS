unit AP_INT_USB;
{**************************************************************************}
{                                                                          }
{    This C DLL header file first (automatic) conversion generated by:     }
{    HeadConv 4.0 (c) 2000 by Bob Swart (aka Dr.Bob - www.drbob42.com)     }
{      Final Delphi-Jedi (Darth) command-line units edition                }
{                                                                          }
{    Generated Date: 17/10/2013                                            }
{    Generated Time: 11:16:13                                              }
{                                                                          }
{**************************************************************************}

interface
uses
{$IFDEF WIN32}
  Windows;
{$ELSE}
  Wintypes, WinProcs;
{$ENDIF}


{=> c:\saphirp\data\AP_INT_USB.H <=}


{ #pragma pack(push) }
{ #pragma pack(1) }

{$IFDEF __cplusplus}
{$ENDIF}

var
  ApintUsb: function(ProductNumber: LongInt; 
                  ChannelNumber: LongInt;
                  func: PCHAR;
                  In1: Double;
                  In2: Double;
                  In3: Double;
                  In4: Double;
                  In5: Double;
                  In6: Double;
                  var Out1: SmallInt;
                  var Out2: SmallInt;
                  var Out3: SmallInt;
                  var Out4: SmallInt;
                  var Out5: SmallInt;
                  var Out6: SmallInt;
                  arr: pSmallInt;
                  var len: LongInt): LongInt cdecl				;
//                  var len: LongInt): LongInt cdecl  {$IFDEF WIN32} stdcall {$ENDIF};


var
  LVDLLStatus: function(errStr: PChar; 
                        errStrLen: Integer;
                        module: Pointer): LongInt cdecl;

{$IFDEF __cplusplus}
{$ENDIF}

{ #pragma pack(pop) }



var
  DLLLoaded: Boolean { is DLL (dynamically) loaded already? }
    {$IFDEF WIN32} = False; {$ENDIF}
procedure LoadDLL_saphir;
procedure NewExit_saphir;
implementation

var
  SaveExit: pointer;
  DLLHandle: THandle;
{$IFNDEF MSDOS}
  ErrorMode: Integer;
{$ENDIF}

  procedure NewExit_saphir; far;
  begin
    //ExitProc := SaveExit;
    if DLLLoaded then FreeLibrary(DLLHandle)
  end {NewExit};

procedure LoadDLL_saphir;
begin
  if DLLLoaded then Exit;
{$IFNDEF MSDOS}
  ErrorMode := SetErrorMode($8000{SEM_NoOpenFileErrorBox});
{$ENDIF}
  DLLHandle := LoadLibrary('AP_INT_USB.DLL');
  if DLLHandle >= 32 then
  begin
    DLLLoaded := True;
    SaveExit := ExitProc;
   // ExitProc := @NewExit;
    @ApintUsb := GetProcAddress(DLLHandle,'ApintUsb');
  {$IFDEF WIN32}
    Assert(@ApintUsb <> nil);
  {$ENDIF}
    @LVDLLStatus := GetProcAddress(DLLHandle,'LVDLLStatus');
  {$IFDEF WIN32}
    Assert(@LVDLLStatus <> nil);
  {$ENDIF}
  end
  else
  begin
    DLLLoaded := False;
    { Error: AP_INT_USB.DLL could not be loaded !! }
  end;
{$IFNDEF MSDOS}
  SetErrorMode(ErrorMode)
{$ENDIF}
end {LoadDLL};

begin
 // LoadDLL_saphir;
end.
